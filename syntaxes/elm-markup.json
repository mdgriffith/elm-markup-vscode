{
  "fileTypes": [
    "elm-markup"
  ],
  "name": "Elm Markup",
  "scopeName": "source.elm-markup",
  "patterns": [
    {
      "include": "#block"
    },
    {
      "include": "#reference"
    },
    {
      "include": "#inline"
    },
    {
      "include": "#inline-attributes"
    },
    {
      "include": "#italic"
    },
    {
      "include": "#bold"
    },
    {
      "include": "#nobreak"
    },
    {
      "include": "#list-icon"
    },
    {
      "include": "#dashes"
    },
    {
      "include": "#arrow"
    },
    {
      "include": "#field"
    },
    {
      "include": "#list-number-icon"
    }
  ],
  "repository": {
    "reference": {
      "match": "\\s*(\\->)\\s*(\\{[a-zA-Z0-9_-]+\\})",
      "name": "constant.other.type-constructor.elm",
      "captures": {
        "1": {
          "name": "keyword.control.elm"
        },
        "2": {
          "name": "constant.type-constructor.elm"
        }
      }
    },
    "block": {
      "match": "^\\s*(\\|\\>?)\\s*([a-zA-Z0-9]+)\\s*(\\{[a-zA-Z0-9_-]+\\})?",
      "name": "storage.type.elm",
      "captures": {
        "1": {
          "name": "keyword.control.elm"
        },
        "2": {
          "name": "constant.name.function.elm"
        },
        "3": {
          "name": "storage.type.elm"
        }
      }
    },
    "inline": {
      "match": "(\\[)([^\\]]*)(\\])",
      "name": "inline.custom.elm",
      "captures": {
        "1": {
          "name": "keyword.control.elm"
        },
        "2": {
          "name": "text.elm-markup"
        },
        "3": {
          "name": "keyword.control.elm"
        }
      }
    },
    "inline-attributes": {
      "name": "meta.inline.custom",
      "begin": "(\\{)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.elm"
        }
      },
      "end": "(\\})",
      "endCaptures": {
        "1": {
          "name": "keyword.control.elm"
        }
      },
      "patterns": [
        {
          "match": "\\s*([^=^\\|^\\}]+)(=)([^\\|^\\}]+)\\s*",
          "name": "meta.inline.key-value",
          "captures": {
            "1": {
              "name": "comment.block.elm-markup"
            },
            "2": {
              "name": "keyword.control.elm"
            },
            "3": {
              "name": "comment.block.elm-markup"
            }
          }
        },
        {
          "match": "\\s*([^\\|\\}]+)\\s*\\|",
          "name": "entity.name.inline.elm"
        },
        {
          "match": "\\s*([^\\|\\}]+)\\s*",
          "name": "entity.name.inline.elm"
        }
      ]
    },
    "inline-token": {
      "match": "(\\{)([a-zA-Z0-9]+)(\\})",
      "name": "entity.name.inline.elm",
      "captures": {
        "1": {
          "name": "entity.name.inline.elm"
        },
        "2": {
          "name": "entity.name.inline.elm"
        },
        "3": {
          "name": "entity.name.inline.elm"
        }
      }
    },
    "arrow": {
      "match": "(\\->)",
      "name": "constant.other.type-constructor.elm",
      "captures": {
        "1": {
          "name": "keyword.control.elm"
        }
      }
    },
    "field": {
      "match": "([a-zA-Z0-9]*)\\s*(\\=)",
      "name": "meta.record.field.elm",
      "captures": {
        "1": {
          "name": "entity.name.field.elm"
        },
        "2": {
          "name": "keyword.control.elm"
        }
      }
    },
    "list-icon": {
      "match": "^\\s+(-+)([a-z0-9]*)([^a-zA-Z0-9 \\t]*)",
      "name": "constant.other.item-number.elm",
      "captures": {
        "1": {
          "name": "entity.control.elm"
        },
        "2": {
          "name": "entity.name.block.elm"
        },
        "3": {
          "name": "keyword.control.elm"
        }
      }
    },
    "list-number-icon": {
      "match": "^\\s+([\\d]+[\\.]*)",
      "name": "constant.other.item-number.elm",
      "captures": {
        "1": {
          "name": "entity.control.elm"
        }
      }
    },
    "dashes": {
      "match": "(-+)",
      "name": "constant.other.dashes.elm",
      "captures": {
        "1": {
          "name": "keyword.control.elm"
        }
      }
    },
    "italic": {
      "match": "(\\/)([^/]*)(\\/)",
      "name": "meta.inline.italic.custom",
      "captures": {
        "1": {
          "name": "string.italic.elm-markup"
        },
        "2": {
          "name": "string.italic.elm-markup"
        },
        "3": {
          "name": "string.italic.elm-markup"
        }
      }
    },
    "nobreak": {
      "match": "\\<\\>",
      "name": "keyword.control.elm"
    },
    "bold": {
      "match": "(\\*)([^\\*]+)(\\*)",
      "name": "meta.inline.bold",
      "captures": {
        "1": {
          "name": "other.content.bold.elm-markup"
        },
        "2": {
          "name": "other.content.bold.elm-markup"
        },
        "3": {
          "name": "other.content.bold.elm-markup"
        }
      }
    }
  }
}